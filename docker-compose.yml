version: '3.8'

networks:
  # internal
  internal:
    internal: true
  # ingress proxy and exposed services
  ingress:
    internal: true
  # egress for containers needing access to external networks
  egress:

services:

  home-assistant:
    extends:
      file: ${CONFIG_PATH}/docker-compose/base.yml
      service: base
    build: docker/home-assistant
    networks:
      - internal
      - ingress
      - egress
    volumes:
      - ${DATA_PATH}/home-assistant:/config
      - ${CONFIG_PATH}/home-assistant/configuration.yaml:/config/configuration.yaml:ro
      - ${CONFIG_PATH}/home-assistant/configuration:/config/configuration:ro
      - ${SECRETS_PATH}/home-assistant/secrets.yaml:/config/secrets.yaml:ro

  traefik:
    extends:
      file: ${CONFIG_PATH}/docker-compose/base.yml
      service: base
    build: docker/traefik
    networks:
      - ingress
    command:
      - --api=true
      - --api.dashboard=true
      - --api.insecure=true
      - --certificatesResolvers.default.acme.email=${TRAEFIK_ACME_EMAIL}
      - --certificatesResolvers.default.acme.storage=/acme/acme.json
      - --certificatesResolvers.default.acme.httpChallenge.entryPoint=http
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --entrypoints.https.http.tls.certresolver=default
      - --entrypoints.https.http.tls.domains[0].main=${TRAEFIK_DOMAIN}
      - --global.checkNewVersion=false
      - --global.sendAnonymousUsage=false
      - --log.level=WARN
      - --providers.docker
      - --providers.docker.exposedByDefault=false
    labels:
      - "traefik.enable=true"
      # HTTP-to-HTTPS Redirect
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.routers.http-catchall.service=http-catchall-svc"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.services.http-catchall-svc.loadbalancer.server.port=80"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik_acme_volume:/acme
      # TODO secure the access
      - /var/run/docker.sock:/var/run/docker.sock

  traefik-whoami:
    extends:
      file: ${CONFIG_PATH}/docker-compose/base.yml
      service: base
    build: docker/traefik-whoami
    networks:
      - ingress
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-whoami.entrypoints=https"
      - "traefik.http.routers.traefik-whoami.rule=Host(`${TRAEFIK_DOMAIN}`) && Path(`/`)"

  vpn:
    extends:
      file: ${CONFIG_PATH}/docker-compose/base.yml
      service: base
    build: docker/wireguard
    networks:
      - dmz
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - INTERNAL_SUBNET=${WIREGUARD_SUBNET}
      - ALLOWEDIPS=${WIREGUARD_ALLOWEDIPS}
    volumes:
      - /lib/modules:/lib/modules
      - ${DATA_PATH}/wireguard:/config
      - ${CONFIG_PATH}/wireguard/peer.conf:/config/templates/peer.conf:ro
      - ${CONFIG_PATH}/wireguard/server.conf:/config/templates/server.conf:ro
    ports:
      - "${WIREGUARD_PUBLIC_PORT}:51820/udp"
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1

volumes:
  traefik_acme_volume:
